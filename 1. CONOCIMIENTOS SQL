1.1) La sentencia JOIN combina datos de dos o más tablas en función de una columna común
1.2) 
INNER JOIN se utiliza para mostrar registros coincidentes de ambas tablas. También se denomina JOIN simple.
LEFT JOIN devuelve todo lo que hay en la tabla de la izquierda y las filas que coinciden en la tabla de la derecha. Si no existe ninguna coincidencia para alguna de las filas de la tabla de la izquierda, de igual forma todos los resultados de la primera tabla se muestran.
RIGHT JOIN devuelve todas las filas de la tabla derecha y solo las coincidentes de la izquierda.
La tabla asociada al FROM será siempre la tabla LEFT, y la tabla que viene después del JOIN será la tabla RIGHT, y si no hay ningún dato que coincida en la fila de la tabla izquierda o derecha, según sea el caso, se mostrará NULL.
FULL JOIN 
Devuelve todas las filas de ambas tablas, y en caso de no haber coincidencia, rellena con NULL.
Se usa cuando se quieren ver todos los registros, coincidan o no.
CROSS JOIN combina todas las filas de una tabla con todas las filas de otra tabla, independientemente de cualquier condición o relación específica entre las filas.
SELF JOIN una autounión, como su nombre lo indica, une una tabla consigo misma. Para utilizar una autounión, la tabla debe contener una columna (llámese X) que actúe como clave primaria, y otra columna (llámese Y) que almacene valores que puedan coincidir con los valores de la columna X. Los valores de las columnas X e Y no tienen por qué ser los mismos para una fila determinada, y el valor de la columna Y puede ser incluso null.
1.3) TRIGGERS  Es un objeto que se crea con la sentencia CREATE TRIGGER y tiene que estar asociado a una tabla. Un trigger se activa, se dispara, cuando ocurre un evento de inserción, actualización o borrado, sobre la tabla a la que está asociado. 
Los triggers pueden evitar realizar modificaciones incorrectas o inconsistencias; realizar acciones sin intervención manual, controlar autenticidad de datos, enviar notificaciones o actualizar otras tablas cuando se inserta, actualiza o elimina un dato.
1.4) STORED PROCEDURE Es un conjunto de instrucciones SQL que se guardan en la base de datos y se pueden ejecutar cuando sea necesario. 
Permite guardar fácilmente bloques de código usados con frecuencia, acceder a ellos cuando sea necesario y así automatizar procesos recurrentes y mejorar considerablemente la eficiencia de la gestión de tus datos.
1.5)
SELECT DISTINCT p.idProducto, p.nombre, p.precio
FROM Productos p
INNER JOIN Ventas v ON p.idProducto = v.idProducto;

1.6)
SELECT p.idProducto, p.nombre, p.precio, SUM(v.cantidad) AS total_vendido
FROM productos p
INNER JOIN ventas v ON p.idProducto = v.idProducto
GROUP BY p.idProducto, p.nombre, p.precio
ORDER BY total_vendido DESC;

1.7)
SELECT 
    p.idProducto, 
    p.nombre, 
    p.precio, 
    COALESCE(SUM(v.cantidad), 0) AS $total_vendido
FROM productos p
LEFT JOIN ventas v ON p.idProducto = v.idProducto
GROUP BY p.idProducto, p.nombre, p.precio
ORDER BY $total_vendido DESC;

